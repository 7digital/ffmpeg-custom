on:
  push:
    branches:
      - main
jobs:
  build:
    strategy:
      matrix:
        ffmpeg-ver: [
          "4.4",
          "4.3",
          "4.2",
          "4.1"
        ]
        gcc-ver: [
          "11",
          "10",
          "9"
        ]
        arch: [
          "x86-64",
          "haswell",
        ]
    runs-on: ubuntu-latest
    container: gcc:${{ matrix.gcc-ver }}
    env:
      CFLAGS: -O3 -march=${{ matrix.arch }}
      CXXFLAGS: -O3 -march=${{ matrix.arch }}
    steps:
      - name: Install dependencies
        run: |
          apt update -qq
          apt -y install \
            autoconf \
            automake \
            build-essential \
            cmake \
            git-core \
            libass-dev \
            libfreetype6-dev \
            libgnutls28-dev \
            libsdl2-dev \
            libsoxr-dev \
            libtool \
            libtheora-dev \
            libvdpau-dev \
            libvorbis-dev \
            libxcb1-dev \
            libxcb-shm0-dev \
            libxcb-xfixes0-dev \
            meson \
            nasm \
            ninja-build \
            pkg-config \
            texinfo \
            time \
            unzip \
            yasm \
            zlib1g-dev
      - name: Clone FFMPEG ${{ matrix.ffmpeg-ver }}
        uses: actions/checkout@v2
        with:
          repository: FFmpeg/FFmpeg
          ref: release/${{ matrix.ffmpeg-ver }}
      - name: Clone FDK AAC
        uses: actions/checkout@v2
        with:
          repository: mstorsjo/fdk-aac
          path: ./fdk-aac
      - name: Compile FDK AAC
        run: |
          cd fdk-aac
          autoreconf -fiv
          ./configure --prefix="${GITHUB_WORKSPACE}/ffmpeg_build" \
            --disable-shared --enable-static
          make -j$(nproc)
          make install
          make distclean
      - name: Get LAME
        run: |
          wget http://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz
          tar xzvf lame-3.100.tar.gz
          rm lame-3.100.tar.gz
      - name: Compile LAME
        run: |
          cd lame-3.100
          ./configure --prefix="${GITHUB_WORKSPACE}/ffmpeg_build" \
            --enable-nasm --disable-shared --enable-static
          make -j$(nproc)
          make install
          make distclean
      - name: Compile FFMPEG
        run: |
          export PKG_CONFIG_PATH="${GITHUB_WORKSPACE}/ffmpeg_build/lib/pkgconfig"
          ./configure --prefix="${GITHUB_WORKSPACE}/ffmpeg_build" \
            --extra-cflags="${CFLAGS} -I${GITHUB_WORKSPACE}/ffmpeg_build/include" \
            --extra-ldflags="-L${GITHUB_WORKSPACE}/ffmpeg_build/lib" \
            --bindir="${GITHUB_WORKSPACE}/bin" --extra-libs="-ldl" \
            --disable-shared \
            --enable-static \
            --disable-ffplay \
            --disable-doc \
            --enable-libfdk-aac \
            --enable-libmp3lame \
            --enable-libsoxr \
            --enable-libtheora \
            --enable-libvorbis \
            --disable-encoders \
            --enable-encoder=flac \
            --enable-encoder=jpeg2000 \
            --enable-encoder=libfdk_aac \
            --enable-encoder=libmp3lame \
            --enable-encoder=libtheora \
            --enable-encoder=libvorbis \
            --enable-encoder=mjpeg \
            --enable-encoder=pcm_s16le \
            --enable-encoder=pcm_s16le_planar \
            --enable-encoder=pcm_s24le \
            --enable-encoder=pcm_s24le_planar \
            --enable-encoder=png \
            --enable-encoder=vorbis \
            --enable-encoder=wrapped_avframe \
            --enable-encoder=zlib \
            --disable-decoders \
            --enable-decoder=flac \
            --enable-decoder=jpeg2000 \
            --enable-decoder=libfdk_aac \
            --enable-decoder=libtheora \
            --enable-decoder=libvorbis \
            --enable-decoder=mjpeg \
            --enable-decoder=pcm_s16le \
            --enable-decoder=pcm_s16le_planar \
            --enable-decoder=pcm_s24le \
            --enable-decoder=pcm_s24le_planar \
            --enable-decoder=png \
            --enable-decoder=theora \
            --enable-decoder=vorbis \
            --enable-decoder=wrapped_avframe \
            --enable-decoder=zlib \
            --disable-parsers \
            --enable-parser=aac \
            --enable-parser=aac_latm \
            --enable-parser=flac \
            --enable-parser=mjpeg \
            --enable-parser=mpegaudio \
            --enable-parser=png \
            --enable-parser=vorbis \
            --disable-filters \
            --enable-filter=acopy \
            --enable-filter=anull \
            --enable-filter=aresample \
            --enable-filter=copy \
            --enable-filter=null \
            --enable-filter=scale \
            --enable-filter=streamselect \
            --disable-hwaccels \
            --disable-indevs \
            --disable-outdevs
          make -j$(nproc)
          make install
      - name: Check binaries
        run: find . | grep ffprobe
      - name: Publish artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.ffmpeg-ver }}-${{ matrix.arch }}-gcc${{ matrix.gcc-ver }}
          path: |
            ffmpeg
            ffplay
            ffprobe
      - name: Download test track
        run: |
          curl https://helpguide.sony.net/high-res/sample1/v1/data/Sample_BeeMoved_96kHz24bit.flac.zip --output sample.zip
          unzip sample.zip
          mv Sample_BeeMoved_96kHz24bit.flac sample.flac
          chmod +x ffmpeg
          mkdir media
      - name: Run test and benchmark for AAC 320
        run: |
          benchmark=media/benchmark-ffmpeg${{ matrix.ffmpeg-ver }}-${{ matrix.arch }}-gcc${{ matrix.gcc-ver }}
          echo -n "AAC320 " >> $benchmark
          /usr/bin/time -f "%E" -a -o $benchmark ./ffmpeg -i sample.flac -c:a libfdk_aac -b:a 320k -c:v copy -movflags +faststart -f mp4 media/aac320.mp4
      - name: Run test and benchmark for AAC 160
        run: |
          benchmark=media/benchmark-ffmpeg${{ matrix.ffmpeg-ver }}-${{ matrix.arch }}-gcc${{ matrix.gcc-ver }}
          echo -n "AAC160 " >> $benchmark
          /usr/bin/time -f "%E" -a -o $benchmark ./ffmpeg -i sample.flac -c:a libfdk_aac -vn -b:a 160k -movflags +faststart -map_metadata -1 -f mp4 media/aac160.mp4
      - name: Run test and benchmark for AAC 64
        run: |
          benchmark=media/benchmark-ffmpeg${{ matrix.ffmpeg-ver }}-${{ matrix.arch }}-gcc${{ matrix.gcc-ver }}
          echo -n "AAC 64 " >> $benchmark
          /usr/bin/time -f "%E" -a -o $benchmark ./ffmpeg -i sample.flac -c:a libfdk_aac -profile:a aac_he -vn -b:a 64k -movflags +faststart -map_metadata -1 -f mp4 media/aac64.mp4
      - name: Run test and benchmark for MP3 320
        run: |
          benchmark=media/benchmark-ffmpeg${{ matrix.ffmpeg-ver }}-${{ matrix.arch }}-gcc${{ matrix.gcc-ver }}
          echo -n "MP3320 " >> $benchmark
          /usr/bin/time -f "%E" -a -o $benchmark ./ffmpeg -i sample.flac -b:a 320k -c:v copy -id3v2_version 3 -f mp3 media/mp3320.mp3
      - name: Run test and benchmark for MP3 download
        run: |
          benchmark=media/benchmark-ffmpeg${{ matrix.ffmpeg-ver }}-${{ matrix.arch }}-gcc${{ matrix.gcc-ver }}
          echo -n "MP3dwn " >> $benchmark
          /usr/bin/time -f "%E" -a -o $benchmark ./ffmpeg -i sample.flac -b:a 320k -vn -f mp3 media/mp3_download.mp3
      - name: Run test and benchmark for MP3 streaming
        run: |
          benchmark=media/benchmark-ffmpeg${{ matrix.ffmpeg-ver }}-${{ matrix.arch }}-gcc${{ matrix.gcc-ver }}
          echo -n "MP3str " >> $benchmark
          /usr/bin/time -f "%E" -a -o $benchmark ./ffmpeg -i sample.flac -b:a 320k -vn -map_metadata -1 -f mp3 media/mp3_streaming.mp3
      - name: Run test and benchmark for OGG 320
        run: |
          benchmark=media/benchmark-ffmpeg${{ matrix.ffmpeg-ver }}-${{ matrix.arch }}-gcc${{ matrix.gcc-ver }}
          echo -n "OGG320 " >> $benchmark
          /usr/bin/time -f "%E" -a -o $benchmark ./ffmpeg -i sample.flac -q:a 320k -map_metadata -1 -c:a libvorbis -f oga media/ogg320.ogg
      - name: Publish benchmarks result
        uses: actions/upload-artifact@v2
        with:
          name: benchmark-${{ matrix.ffmpeg-ver }}-${{ matrix.arch }}-gcc${{ matrix.gcc-ver }}
          path: media/**
